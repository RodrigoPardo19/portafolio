---
import type { GetStaticPaths } from "astro";
import projects from "@/data/projects.json";
import DefaultLayout from "@/layouts/DefaultLayout.astro";
import Breadcrumbs from "@/components/Breadcrumbs";
import Badge from "@/components/Badge";

export const getStaticPaths = (() => {
  return projects.map((project) => {
    return { params: { project: project.title } };
  });
}) satisfies GetStaticPaths;

const { project } = Astro.params;

const paths = [
  { name: "Projects", url: "#projects" },
  { name: project, url: `#description` },
];

const currentProject = projects.find((p) => p.title === project);
---

<DefaultLayout>
  <main class="flex flex-col gap-8">
    <div class="flex items-center">
      <Breadcrumbs currentPath={project} paths={paths} />
      {currentProject?.sideProject ? <Badge title="sideproject" /> : null}
    </div>
    <section class="hyphens-auto" id="description" title="hola">
      {
        Array.isArray(currentProject?.description) ? (
          currentProject.description.map((d) => (
            <p class="indent-3 text-justify hyphens-auto">{d}</p>
          ))
        ) : (
          <p class="indent-3 text-justify hyphens-auto">{currentProject?.description}</p>
        )
      }
    </section>
    <section id="tags">
      <p>
        <Badge title="Stack" />
        {
          currentProject?.stack.map(
            (t, index) => `${t.name}${index < currentProject.stack.length - 1 ? ", " : ""}`,
          )
        }
      </p>
      <p>
        <Badge title="Website" />
        {
          currentProject?.url ? (
            <a class="text-primary" href={currentProject?.url} target="_blank">
              {currentProject?.url}
            </a>
          ) : (
            "Proyecto privado (URL no disponible por confidencialidad)"
          )
        }
      </p>
      {
        currentProject?.company ? (
          <p>
            <Badge title="Company" />
            <a class="text-primary" href={currentProject?.company.url} target="_blank">
              {currentProject?.company.name}
            </a>
          </p>
        ) : null
      }
      <p>
        {
          currentProject?.sideProject ? (
            <p>
              <Badge title="Github" />
              <a class="text-primary" href={currentProject?.repo} target="_blank">
                {currentProject?.repo}
              </a>
            </p>
          ) : null
        }
      </p>
    </section>
  </main>
</DefaultLayout>
